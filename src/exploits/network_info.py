import logging
import os
import socket
from bs4 import BeautifulSoup
from urllib.request import urlopen
from Webcrawler import WebCrawler


colors = {
    'BLUE': '\33[1;94m',
    'RED': '\033[1;91m',
    'WHITE': '\33[1;97m',
    'YELLOW': '\33[1;93m',
    'MAGENTA': '\033[1;35m',
    'GREEN': '\033[1;32m',
    'END': '\033[0m',
}

logging.basicConfig(filename="net_intel.log", level=logging.DEBUG)


class NetworkIntelligence(WebCrawler):
    global colors

    def __init__(self, base_url):
        super().__init__(base_url)

    def network_mapper(self):
        logging.info("Scan for open ports")
        command = "nmap -F " + self.base_url[8:]
        try:
            process = os.popen(command)
            output = str(process.read())
            # --------------
            style = "-" * 45
            # --------------
            print(colors["MAGENTA"], style, "NMAP Scan", style, colors["END"])
            print(colors["BLUE"], output, colors["END"])
        except Exception as e:
            logging.debug("ERROR OCCURED")
            print(colors["RED"], "Error ", e, colors["END"])

    def robots(self):
        try:
            logging.info("Look for robots.txt")
            robots_request = urlopen(self.base_url+"/robots.txt")
            robots = robots_request
            if robots_request is not None:
                bsRobots = BeautifulSoup(robots, "lxml")
                # --------------
                style = "-" * 45
                # --------------
                print(colors["MAGENTA"], style, "Robots.txt", style, colors["END"])
                print(colors["BLUE"], bsRobots.string, colors["END"])
            else:
                logging.info("ERROR: No Robots.txt file found")
                print(colors["GREEN"], "Robots.txt not found", colors["END"])
        except Exception as e:
            logging.debug("ERROR OCCURED")
            print(colors["RED"], "Error ", e, colors["END"])

    def whois_info(self):
        try:
            logging.info("AUTOMATE Whois tool")
            command = "whois " + self.base_url[8:]
            process = os.popen(command)
            output = str(process.read())
            # --------------
            style = "-" * 45
            # --------------
            print(colors["MAGENTA"], style, "WHOIS Info", style, colors["END"])
            print(colors["BLUE"], output, colors["END"])
        except Exception as e:
            logging.debug("ERROR OCCURED")
            print(colors["RED"], "Error ", e, colors["END"])

    def host_address(self):
        host = self.base_url[8:]
        try:
            logging.info("IP Address socket function")
            results = socket.gethostbyname(host)
            if results is not None:
                # -----------------
                style = "-" * 45
                # -----------------
                print(colors["MAGENTA"], style, "IP Address", style, colors["END"])
                print(colors["BLUE"], results, colors["END"])
            else:
                pass
        except Exception as e:
            logging.error("ERROR WITH NAME RES")
            print(colors["RED"], "Error ", e, colors["END"])
